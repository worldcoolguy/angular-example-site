[
    {
        "title": "Average Performance Curve",
        "ploturl":"http://res.cloudinary.com/harip/image/upload/c_scale,w_481/v1520671187/avgcurve.png",
        "code":"\"\"\"Average performance curve\"\"\"\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nPERF_DATA = pd.read_csv('timeseries.csv')\n\n# Read column names\nCOL_NAMES = list(PERF_DATA.columns.values)\n\n# get average values for each column as a series\nAVG_VALUES = pd.Series([PERF_DATA[col_name].mean() for col_name in COL_NAMES])\n\n# plot series\nAVG_VALUES.plot(kind='line', grid=True, ylim={0, 100})\nplt.show()\n"
    },

    {
        "title": "Average Performance Curve by Group",
        "ploturl":"https://res.cloudinary.com/harip/image/upload/v1520830604/avgcurvebygroup.png",
        "code":"\"\"\"Average performance curve for each group\"\"\"\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nPERF_DATA = pd.read_csv('timeseries.csv')\n\n# Get distinct groups\nGROUPS = PERF_DATA['Group'].unique()\nGROUPS = sorted(GROUPS[~np.isnan(GROUPS)])\n\n# Read column names and ignore Group column\nCOL_NAMES = [colname for colname in PERF_DATA.columns.values if \"Age_\" in colname]\n\nPERF_AVGDATA_GROUPS = pd.DataFrame()\nfor group in GROUPS:\n    group_values = PERF_DATA[PERF_DATA['Group'] == group]\n    group_name = f'Group {int(group)}'\n    group_means = [group_values[colname].mean() for colname in COL_NAMES]\n    group_avg_values = pd.Series(group_means, name=group_name)\n    PERF_AVGDATA_GROUPS = PERF_AVGDATA_GROUPS.append(group_avg_values)\n\nPERF_AVGDATA_GROUPS.T.plot()\nplt.show()\n"
    },
    
    {
        "title": "Average Performance Curve with Data",
        "ploturl":"https://res.cloudinary.com/harip/image/upload/v1520830604/avgcurvewithdata.png",
        "code":"\"\"\"Average performance curve for each group\"\"\"\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nPERF_DATA = pd.read_csv('timeseries.csv')\nGROUP = 3\nPERF_GROUP_DATA = PERF_DATA[PERF_DATA['Group'] == GROUP]\n\n# Read column names and ignore Group column\nCOL_NAMES = [colname for colname in PERF_GROUP_DATA.columns.values if \"Age_\" in colname]\n\n# Plot entire data set\nGROUP_VALUES = PERF_GROUP_DATA.drop(columns=['Group']).T\n\n# Get average for the group\nGROUP_AVG_VALUES = pd.Series([PERF_GROUP_DATA[colname].mean() for colname in COL_NAMES])\n\nplt.plot(range(len(COL_NAMES)), GROUP_VALUES, color='lightgray', linewidth=0.5)\nplt.plot(GROUP_AVG_VALUES, color='black')\nplt.show()\n"
    }    
]